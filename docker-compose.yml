version: '3.9'

services:

  zookeeper:
    container_name: zookeeper
    image: docker.io/bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    container_name: kafka
    image: docker.io/bitnami/kafka:latest
    ports:
      - "9092:9092"
    restart: always
    environment:
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_USER:-test}
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    restart: always
    logging:
      options:
        max-size: 10m
        max-file: "3"


  redis:
    container_name: redis
    restart: always
    image: 'redis:latest'
    ports:
      - "6379:6379"
    logging:
      options:
        max-size: 10m
        max-file: "3"

  service:
    container_name: ride.hailing.service
    image: ride_hailing_service
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py start-service
    ports:
      - "8000:8000"
    environment:
      DATABASE_DRIVER_NAME: ${DATABASE_DRIVER_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_POOL_SIZE: ${DATABASE_POOL_SIZE}
      DATABASE_MAX_OVERFLOW: ${DATABASE_MAX_OVERFLOW}
      CACHE_HOST: ${CACHE_HOST}
      CACHE_PORT: ${CACHE_PORT}
      CACHE_DB_NUMBER: ${CACHE_DB_NUMBER}
      FLASK_HOST: ${FLASK_HOST}
      FLASK_PORT: ${FLASK_PORT}

      KAFKA_BROKERS_LIST: ${KAFKA_BROKERS_LIST}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      KAFKA_TOPIC_LIST: ${KAFKA_TOPIC_LIST}
      KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
      KAFKA_SESSION_TIMEOUT_MS: ${KAFKA_SESSION_TIMEOUT_MS}
      KAFKA_AUTO_OFFSET_RESET: ${KAFKA_AUTO_OFFSET_RESET}

      SCHEDULED_TIME_FOR_CALCULATOR_PROCESS: ${SCHEDULED_TIME_FOR_CALCULATOR_PROCESS}











































